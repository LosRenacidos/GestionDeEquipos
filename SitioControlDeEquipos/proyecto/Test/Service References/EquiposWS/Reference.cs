//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.EquiposWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Equipo", Namespace="http://schemas.datacontract.org/2004/07/WCFServicios.Dominio")]
    [System.SerializableAttribute()]
    public partial class Equipo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int codigo_equipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descripcion_equipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string marca_equipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string serie_equipoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int codigo_equipo {
            get {
                return this.codigo_equipoField;
            }
            set {
                if ((this.codigo_equipoField.Equals(value) != true)) {
                    this.codigo_equipoField = value;
                    this.RaisePropertyChanged("codigo_equipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descripcion_equipo {
            get {
                return this.descripcion_equipoField;
            }
            set {
                if ((object.ReferenceEquals(this.descripcion_equipoField, value) != true)) {
                    this.descripcion_equipoField = value;
                    this.RaisePropertyChanged("descripcion_equipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string marca_equipo {
            get {
                return this.marca_equipoField;
            }
            set {
                if ((object.ReferenceEquals(this.marca_equipoField, value) != true)) {
                    this.marca_equipoField = value;
                    this.RaisePropertyChanged("marca_equipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serie_equipo {
            get {
                return this.serie_equipoField;
            }
            set {
                if ((object.ReferenceEquals(this.serie_equipoField, value) != true)) {
                    this.serie_equipoField = value;
                    this.RaisePropertyChanged("serie_equipo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFServicios.Errores")]
    [System.SerializableAttribute()]
    public partial class RepetidoException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descripcionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codigo {
            get {
                return this.codigoField;
            }
            set {
                if ((object.ReferenceEquals(this.codigoField, value) != true)) {
                    this.codigoField = value;
                    this.RaisePropertyChanged("codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descripcion {
            get {
                return this.descripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.descripcionField, value) != true)) {
                    this.descripcionField = value;
                    this.RaisePropertyChanged("descripcion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EquiposWS.IEquipos")]
    public interface IEquipos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/CrearEquipo", ReplyAction="http://tempuri.org/IEquipos/CrearEquipoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Test.EquiposWS.RepetidoException), Action="http://tempuri.org/IEquipos/CrearEquipoRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFServicios.Errores")]
        Test.EquiposWS.Equipo CrearEquipo(Test.EquiposWS.Equipo equipoACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/CrearEquipo", ReplyAction="http://tempuri.org/IEquipos/CrearEquipoResponse")]
        System.Threading.Tasks.Task<Test.EquiposWS.Equipo> CrearEquipoAsync(Test.EquiposWS.Equipo equipoACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/ObtenerEquipo", ReplyAction="http://tempuri.org/IEquipos/ObtenerEquipoResponse")]
        Test.EquiposWS.Equipo ObtenerEquipo(int codigo_equipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/ObtenerEquipo", ReplyAction="http://tempuri.org/IEquipos/ObtenerEquipoResponse")]
        System.Threading.Tasks.Task<Test.EquiposWS.Equipo> ObtenerEquipoAsync(int codigo_equipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/ModificarEquipo", ReplyAction="http://tempuri.org/IEquipos/ModificarEquipoResponse")]
        Test.EquiposWS.Equipo ModificarEquipo(Test.EquiposWS.Equipo equipoAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/ModificarEquipo", ReplyAction="http://tempuri.org/IEquipos/ModificarEquipoResponse")]
        System.Threading.Tasks.Task<Test.EquiposWS.Equipo> ModificarEquipoAsync(Test.EquiposWS.Equipo equipoAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/EliminarEquipo", ReplyAction="http://tempuri.org/IEquipos/EliminarEquipoResponse")]
        void EliminarEquipo(int codigo_equipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/EliminarEquipo", ReplyAction="http://tempuri.org/IEquipos/EliminarEquipoResponse")]
        System.Threading.Tasks.Task EliminarEquipoAsync(int codigo_equipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/ListarEquipos", ReplyAction="http://tempuri.org/IEquipos/ListarEquiposResponse")]
        Test.EquiposWS.Equipo[] ListarEquipos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipos/ListarEquipos", ReplyAction="http://tempuri.org/IEquipos/ListarEquiposResponse")]
        System.Threading.Tasks.Task<Test.EquiposWS.Equipo[]> ListarEquiposAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEquiposChannel : Test.EquiposWS.IEquipos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EquiposClient : System.ServiceModel.ClientBase<Test.EquiposWS.IEquipos>, Test.EquiposWS.IEquipos {
        
        public EquiposClient() {
        }
        
        public EquiposClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EquiposClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EquiposClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EquiposClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Test.EquiposWS.Equipo CrearEquipo(Test.EquiposWS.Equipo equipoACrear) {
            return base.Channel.CrearEquipo(equipoACrear);
        }
        
        public System.Threading.Tasks.Task<Test.EquiposWS.Equipo> CrearEquipoAsync(Test.EquiposWS.Equipo equipoACrear) {
            return base.Channel.CrearEquipoAsync(equipoACrear);
        }
        
        public Test.EquiposWS.Equipo ObtenerEquipo(int codigo_equipo) {
            return base.Channel.ObtenerEquipo(codigo_equipo);
        }
        
        public System.Threading.Tasks.Task<Test.EquiposWS.Equipo> ObtenerEquipoAsync(int codigo_equipo) {
            return base.Channel.ObtenerEquipoAsync(codigo_equipo);
        }
        
        public Test.EquiposWS.Equipo ModificarEquipo(Test.EquiposWS.Equipo equipoAModificar) {
            return base.Channel.ModificarEquipo(equipoAModificar);
        }
        
        public System.Threading.Tasks.Task<Test.EquiposWS.Equipo> ModificarEquipoAsync(Test.EquiposWS.Equipo equipoAModificar) {
            return base.Channel.ModificarEquipoAsync(equipoAModificar);
        }
        
        public void EliminarEquipo(int codigo_equipo) {
            base.Channel.EliminarEquipo(codigo_equipo);
        }
        
        public System.Threading.Tasks.Task EliminarEquipoAsync(int codigo_equipo) {
            return base.Channel.EliminarEquipoAsync(codigo_equipo);
        }
        
        public Test.EquiposWS.Equipo[] ListarEquipos() {
            return base.Channel.ListarEquipos();
        }
        
        public System.Threading.Tasks.Task<Test.EquiposWS.Equipo[]> ListarEquiposAsync() {
            return base.Channel.ListarEquiposAsync();
        }
    }
}
